@model Music.Model.EF.Music
@{
    Music.Model.EF.MusicProjectDataEntities db = new Music.Model.EF.MusicProjectDataEntities();
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm("Create", "Musics", FormMethod.Post, new { @enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Music</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.music_name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.music_name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.music_name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.music_img, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="img" class="btn btn-danger" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.music_lyric, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.music_lyric, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.music_lyric, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.music_time, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.music_time, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.music_time, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.music_view, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.music_view, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.music_view, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.music_dowload, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.music_dowload, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.music_dowload, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.music_linkdow, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="mp3" class="btn btn-danger" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.nation_id, "nation_id", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select class="ui fluid search dropdown">
                    @foreach (var item in db.Nationals)
                    {
                        <option value="@item.nation_id">@item.nation_name</option>
                    }
                </select>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.music_video, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" class="btn btn-danger" name="mp4" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.genres_id, "genres_id", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select class="ui fluid search dropdown">
                    <option value="">Chọn thể loại</option>
                    @foreach (var item in db.Genres)
                    {
                        <option value="@item.genres_id">@item.genres_name</option>
                    }
                </select>
            </div>
        </div>

        <select class="ui fluid search dropdown" multiple="">
            <option value="">Chọn danh mục</option>
            @foreach (var item in db.Categories.Where(x => x.category_bin == false && x.category_active == true))
            {
                <option value="@item.category_id">@item.category_name</option>
            }
        </select>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<script>
    $(".ui.fluid.search.dropdown").dropdown();
</script>
